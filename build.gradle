buildscript {
	ext {
		kotlinVersion = '1.3.11'
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

group = 'org.elemental'
version = '1.0.0'
sourceCompatibility = 1.8

war {
	archiveName = "${project.name}.war"
}

bootRun {
	sourceResources sourceSets.main
}

repositories {
	jcenter()
	mavenCentral()
	mavenLocal()
	maven{url "http://jasperreports.sourceforge.net/maven2/"}
	maven{url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/"}
}

configurations {
    jasperreports {
        transitive = true
    }
}

gradle.projectsEvaluated {
    processResources.dependsOn(compileJasperReports)
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-mail:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}")
    runtime("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
	compile group: 'org.springframework.security', name: 'spring-security-messaging', version: '5.0.6.RELEASE'
	compile group: 'org.springframework', name: 'spring-messaging', version: '5.0.7.RELEASE'
	compile group: 'org.springframework', name: 'spring-websocket', version: '5.0.7.RELEASE'

	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")

	testCompile 'junit:junit:4.11'
	testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

	compile group: 'net.sf.jasperreports', name: 'jasperreports', version: '6.5.1'
	jasperreports 'net.sf.jasperreports:jasperreports:6.5.1', 'org.codehaus.groovy:groovy-all:2.4.4'

	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

	compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.13'

    compile("com.oracle:ojdbc7:12.1.0.2")
	compile('mysql:mysql-connector-java')

	compile group: 'com.zaxxer', name: 'HikariCP', version: '3.2.0'
	compile group: 'org.postgresql', name: 'postgresql', version: '42.2.5'
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.47'

	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
	compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.7'
}

task compileJasperReports {
    doLast {
        ant.mkdir("dir": "src/main/resources/jasper/build")
        ant.taskdef(
                name: 'jrc',
                classname: 'net.sf.jasperreports.ant.JRAntCompileTask',
                classpath: configurations.jasperreports.asPath) {
        }
        ant.jrc("srcdir": 'src/main/resources/jasper',
                "destdir": 'src/main/resources/jasper/build') {
            classpath(path: 'src/main/resources/jasper')
            include(name: '**/*.jrxml')
        }
    }
}

task stage {
	dependsOn installDist
	
}
